name: Test Staging
on:
  push:
    branch:
      staging


jobs:
  build-windows:
    runs-on: windows-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Cache sqlite
        id: cache-sqlite
        uses: actions/cache@v3
        with:
          path: '${{github.workspace}}\sqlite'
          key: ${{runner.os}}-sqlite-3400100

      - name: Download SQLITE-Amalgamation
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_amalgamation
        with:
          file-url: https://www.sqlite.org/2022/sqlite-amalgamation-3400100.zip
          file-name: sqlite-amalg.zip
          location: '${{github.workspace}}\sqlite'

      - name: Download SQLITE-dll
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_dll
        with:
          file-url: https://www.sqlite.org/2022/sqlite-dll-win64-x64-3400100.zip
          file-name: sqlite-dll.zip
          location: '${{github.workspace}}\sqlite'

      - name: Prepare SQLITE
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        run: |
          cd sqlite
          7z x sqlite-amalg.zip -o"./include"
          cd include/sqlite-amalgamation-3400100
          move * ..
          cd ../..
          7z x sqlite-dll.zip -o"./lib"
          cd ..

      - name: Install Qt
        if: steps.cache-qt.outputs.cache-hit != 'true'
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.4.*
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          cache: true

      - name: CMake
        run: |
          cmake -S . -B ${{github.workspace}}\builds\build-r -DCMAKE_BUILD_TYPE=Release -DATLASVERSION='${{env.version_short}}' -DATLAS_BUILD_TESTS=1 -DSQL_PATH='${{github.workspace}}\sqlite' -G "MinGW Makefiles"
          cmake -S . -B ${{github.workspace}}\builds\build-d -DCMAKE_BUILD_TYPE=Debug -DATLASVERSION='${{env.version_short}}' -DATLAS_BUILD_TESTS=1 -DSQL_PATH='${{github.workspace}}\sqlite' -G "MinGW Makefiles"

      - name: Build
        run: |
          cmake --build ${{github.workspace}}\builds\build-r -j8
          cmake --build ${{github.workspace}}\builds\build-d -j8

      - name: Test
        run: |
          ${{github.workspace}}\build\build-r\bin\AtlasTESTS
          ${{github.workspace}}\build\build-d\bin\AtlasTESTS

#  build-unix:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          submodules: true
#
#      - name: Prepare dependencies
#        id: prepare-depends
#        run: |
#          sudo apt install libsqlite3-dev libfmt-dev libspdlog-dev qt6-base-dev build-essential libgl1-mesa-dev
#
#      - name: Cmake
#        run: |
#          cmake -S . -B ${{github.workspace}}/build/build-r -DCMAKE_BUILD_TYPE=Release -DATLAS_BUILD_TESTS=1
#          cmake -S . -B ${{github.workspace}}/build/build-d -DCMAKE_BUILD_TYPE=Debug -DATLAS_BUILD_TESTS=1
#
#      - name: Build
#        run: |
#          cmake --build ${{github.workspace}}/build/build-r -j8
#          cmake --build ${{github.workspace}}/build/build-d -j8
#
#      - name: Test
#        run: |
#          ${{github.workspace}}/build/build-r/bin/AtlasTESTS
#          ${{github.workspace}}/build/build-d/bin/AtlasTESTS

