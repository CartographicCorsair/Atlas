name: Test Staging
on:
  push:
    branch:
      staging


jobs:
  build-windows:
    runs-on: windows-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Cache winlibs GCC 12.2
        id: cache-gcc
        uses: actions/cache@v3
        with:
          path: '${{github.workspace}}\mingw32'
          key: ${{runner.os}}-gcc-12.2

      - name: Download winlibs GCC 12.2
        if: steps.cache-gcc.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_gcc
        with:
          file-url: https://github.com/brechtsanders/winlibs_mingw/releases/download/12.2.0-15.0.7-10.0.0-ucrt-r4/winlibs-x86_64-posix-seh-gcc-12.2.0-mingw-w64ucrt-10.0.0-r4.zip
          # FUCK    https://github.com/brechtsanders/winlibs_mingw/releases/download/12.2.0-16.0.0-10.0.0-ucrt-r5/winlibs-i686-posix-dwarf-gcc-12.2.0-mingw-w64ucrt-10.0.0-r5.7z
          #                                                                                                              # ITS ALMOST LIKE I HAD THE WRONG VERSION
          file-name: winlibs-gcc.7z
          location: '${{github.workspace}}\mingw32'

      - name: Prepare winlibs GCC 12.2
        if: steps.cache-gcc.outputs.cache-hit != 'true'
        run: |
          cd mingw32
          7z x winlibs-gcc.7z
          cd ..

      - name: Add GCC to PATH
        run: |
          echo "${{github.workspace}}\mingw32\mingw32\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "${{github.workspace}}\mingw32\mingw32" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Cache sqlite
        id: cache-sqlite
        uses: actions/cache@v3
        with:
          path: '${{github.workspace}}\sqlite'
          key: ${{runner.os}}-sqlite-3400100

      - name: Download SQLITE-Amalgamation
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_amalgamation
        with:
          file-url: https://www.sqlite.org/2022/sqlite-amalgamation-3400100.zip
          file-name: sqlite-amalg.zip
          location: '${{github.workspace}}\sqlite'

      - name: Download SQLITE-dll
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        uses: carlosperate/download-file-action@v2.0.0
        id: download_dll
        with:
          file-url: https://www.sqlite.org/2022/sqlite-dll-win64-x64-3400100.zip
          file-name: sqlite-dll.zip
          location: '${{github.workspace}}\sqlite'

      - name: Prepare SQLITE
        if: steps.cache-sqlite.outputs.cache-hit != 'true'
        run: |
          cd sqlite
          7z x sqlite-amalg.zip -o"./include"
          cd include/sqlite-amalgamation-3400100
          move * ..
          cd ../..
          7z x sqlite-dll.zip -o"./lib"
          cd ..

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.4.2
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          cache: true

      - name: CMake
        run: |
          cmake -S . -B ${{github.workspace}}\builds\build-r -DCMAKE_BUILD_TYPE=Release -DATLASVERSION='${{env.version_short}}' -DATLAS_BUILD_TESTS=1 -DSQL_PATH='${{github.workspace}}\sqlite' -G "MinGW Makefiles"
#         cmake -S . -B ${{github.workspace}}\builds\build-d -DCMAKE_BUILD_TYPE=Debug -DATLASVERSION='${{env.version_short}}' -DATLAS_BUILD_TESTS=1 -DSQL_PATH='${{github.workspace}}\sqlite' -G "MinGW Makefiles"

      - name: Build
        run: |
          cmake --build ${{github.workspace}}\builds\build-r --target AtlasTESTS -j4
#          cmake --build ${{github.workspace}}\builds\build-d --target AtlasTESTS -j4

      - name: Upload release
        uses: actions/upload-artifact@v2
        with:
          name: Atlas-release-tests
          path: ${{github.workspace}}\builds\build-r\bin
          retention-days: 1

#      - name: Upload debug
#        uses: actions/upload-artifact@v2
#        with:
#          name: Atlas-debug-tests
#          path: ${{github.workspace}}\builds\build-d\bin
#          retention-days: 1

  test:
    runs-on: windows-latest
    needs: build-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Download release
        uses: actions/download-artifact@v2
        with:
          name: Atlas-release-tests
          path: ${{github.workspace}}\builds\build-r\bin

#      - name: Download debug
#        uses: actions/download-artifact@v2
#        with:
#          name: Atlas-debug-tests
#          path: ${{github.workspace}}\builds\build-d\bin

      - name: Test-Release
        run: ${{github.workspace}}\builds\build-r\bin\AtlasTESTS.exe

#      - name: Test-Debug
#        run: ${{github.workspace}}\builds\build-d\bin\AtlasTESTS.exe
